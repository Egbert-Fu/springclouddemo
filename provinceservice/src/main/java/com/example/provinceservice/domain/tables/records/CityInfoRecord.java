/*
 * This file is generated by jOOQ.
*/
package com.example.provinceservice.domain.tables.records;


import com.example.provinceservice.domain.tables.CityInfo;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityInfoRecord extends UpdatableRecordImpl<CityInfoRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1547245964;

    /**
     * Setter for <code>springclouddemo.city_info.city_id</code>.
     */
    public void setCityId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>springclouddemo.city_info.city_id</code>.
     */
    public Integer getCityId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>springclouddemo.city_info.city_name</code>.
     */
    public void setCityName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>springclouddemo.city_info.city_name</code>.
     */
    public String getCityName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>springclouddemo.city_info.province_id</code>.
     */
    public void setProvinceId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>springclouddemo.city_info.province_id</code>.
     */
    public Integer getProvinceId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CityInfo.CITY_INFO.CITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CityInfo.CITY_INFO.CITY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return CityInfo.CITY_INFO.PROVINCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCityName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProvinceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityInfoRecord value1(Integer value) {
        setCityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityInfoRecord value2(String value) {
        setCityName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityInfoRecord value3(Integer value) {
        setProvinceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CityInfoRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CityInfoRecord
     */
    public CityInfoRecord() {
        super(CityInfo.CITY_INFO);
    }

    /**
     * Create a detached, initialised CityInfoRecord
     */
    public CityInfoRecord(Integer cityId, String cityName, Integer provinceId) {
        super(CityInfo.CITY_INFO);

        set(0, cityId);
        set(1, cityName);
        set(2, provinceId);
    }
}
